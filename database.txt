CREATE TABLE USERS (
    ID INT, 
    USER_FULLNAME VARCHAR(300),
    USER_EMAIL    VARCHAR(150),
    USER_PASSWORD VARCHAR(200),
    USER_PHONENO VARCHAR(20),
  
    USER_CREDENTIAL_NO 		INT,
    USER_RECORD_NO			INT,
    USER_GALLERY_NO			INT,
    USER_DOCUMENT_NO		INT,

    // Establish a one-to-many relationship with QA_VERIFICATION table
    FOREIGN KEY (QA_VERIFICATION.ID) REFERENCES (QA_VERIFICATION.ID),

    FOREIGN KEY (CREDENTIAL_ACCOUNT.ID) REFERENCES (CREDENTIAL_ACCOUNT.ID),
    FOREIGN KEY (CREDENTIAL_ADDRESS.ID) REFERENCES (CREDENTIAL_ADDRESS.ID),
    FOREIGN KEY (CREDENTIAL_PAYMENT_CARD.ID) REFERENCES (CREDENTIAL_PAYMENT_CARD.ID),
    FOREIGN KEY (CREDENTIAL_BANK_ACCOUNT.ID) REFERENCES (CREDENTIAL_BANK_ACCOUNT.ID),
);

CREATE TABLE QA_VERIFICATION(
    ID INT,
    QUESTION VARCHAR(300),
    ANSWER VARCHAR(200)
)


CREATE TABLE CREDENTIAL_ACCOUNT(
    ID                          INT PRIMARY_KEY,
    PRIVATE_KEY                 INT,
    TITLE				        VARCHAR(150),
    ACCOUNT_APPLICATION_NAME	VARCHAR(200),
    ACCOUNT_USERNAME			VARCHAR(200),
    ACCOUNT_EMAIL_ADDRESS		VARCHAR(200),
    ACCOUNT_PASSWORD			VARCHAR(200),
    ACCOUNT_NOTES				TEXT,
    DATE_ADDED                  DATE
);

CREATE TABLE CREDENTIAL_ADDRESS(
    ID                          INT PRIMARY_KEY,
    PRIVATE_KEY                 INT,
    TITLE				        VARCHAR(150),
    ADDRESS_FIRST_NAME 			VARCHAR(200),
    ADDRESS_MIDDLE_NAME			VARCHAR(200),
    ADDRESS_LAST_NAME			VARCHAR(200),
    ADDRESS_PHONE_NO			VARCHAR(200),
    ADDRESS_EMAIL_ADDRESS		VARCHAR(200),
    ADDRESS_HOME_ADDRESS		VARCHAR(200),
    ADDRESS_NOTES				TEXT,
    DATE_ADDED                  DATE
);

CREATE TABLE CREDENTIAL_PAYMENT_CARD(
    ID                                          INT PRIMARY_KEY,
    PRIVATE_KEY                                 INT,
    TITLE				                        VARCHAR(150),
    PAYMENT_CARD_CARDHOLDER_NAME				VARCHAR(200),
    PAYMENT_CARD_CARDHOLDER_ACCOUNT_NO			VARCHAR(200),
    PAYMENT_CARD_CARDHOLDER_EXPIRATION_DATE 	VARCHAR(200),
    PAYMENT_CARD_CARDHOLDER_SECURITY_CODE 		VARCHAR(200),
    PAYMENT_CARD_NOTES							TEXT,
    DATE_ADDED                                  DATE
);

CREATE TABLE CREDENTIAL_BANK_ACCOUNT(
    ID                                          INT PRIMARY_KEY,
    PRIVATE_KEY                                 INT,
    TITLE				                        VARCHAR(150),
    BANK_ACCOUNT_NAME				            VARCHAR(100),
    BANK_ACCOUNT_ACCOUNT_TYPE		            VARCHAR(100),
    BANK_ACCOUNT_ACCOUNT_NUMBER		            VARCHAR(100),
    BANK_ACCOUNT_PIN				            VARCHAR(100),
    BANK_ACCOUNT_NOTES				            TEXT,
    DATE_ADDED                                  DATE
);

CREATE TABLE CREDENTIAL_DRIVERS_LICENSE(
    PRIVATE_KEY                 INT,
    TITLE				VARCHAR(50)         NOT NULL,
    DRIVERS_LICENSE_FIRST_NAME			VARCHAR(100),
    DRIVERS_LICENSE_MIDDLE_NAME			VARCHAR(100),
    DRIVERS_LICENSE_LAST_NAME			VARCHAR(100),
    DRIVERS_LICENSE_NATIONALITY			VARCHAR(100),
    DRIVERS_LICENSE_GENDER				VARCHAR(100),
    DRIVERS_LICENSE_DATE_OF_BIRTH		VARCHAR(100),
    DRIVERS_LICENSE_HOME_ADDRESS		VARCHAR(100),
    DRIVERS_LICENSE_EXPIRATION_DATE		VARCHAR(100),
    DRIVERS_LICENSE_LICENSE_NO			VARCHAR(100),
    DRIVERS_LICENSE_NOTES				TEXT,
    DATE_ADDED                DATE
);

CREATE TABLE RECORD_LECTURE(
    PRIVATE_KEY         INT,
    TITLE		VARCHAR(50)     NOT NULL,
    LECTURE_SUBJECT		VARCHAR(100),
    LECTURE_LESSON		VARCHAR(100),
    LECTURE_NOTES		TEXT,
    DATE_ADDED        DATE
);

CREATE TABLE RECORD_TO_DO_LIST(
    PRIVATE_KEY          INT,
    TITLE		VARCHAR(50),
    TO_DO_LIST_NOTES		TEXT,
    DATE_ADDED         DATE
);

CREATE TABLE RECORD_SCHEDULE(
    PRIVATE_KEY                    INT,
    TITLE					VARCHAR(50)     NOT NULL,
    SCHEDULE_MONDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_TUESDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_WEDNESDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_THURSDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_FRIDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_SATURDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_SUNDAY_SCHEDULE		VARCHAR(100),
    SCHEDULE_NOTES					TEXT,
    DATE_ADDED                   DATE
);

CREATE TABLE RECORD_COLLABORATION(
    PRIVATE_KEY           INT,
    TITLE			VARCHAR(50)     NOT NULL,
    COLLABORATION_SUBJECT		VARCHAR(100),
    COLLABORATION_NOTES			TEXT,
    DATE_ADDED          DATE
);

CREATE TABLE GALLERY_IMAGE(
    PRIVATE_KEY           INT,
    TITLE			VARCHAR(50)     NOT NULL,
    IMAGE_NOTES			TEXT,
    DATE_ADDED          DATE
);

CREATE TABLE GALLERY_VIDEO(
    PRIVATE_KEY           INT,
    TITLE			VARCHAR(50)     NOT NULL,
    VIDEO_NOTES			TEXT,
    DATE_ADDED          DATE
);

CREATE TABLE DOCUMENT_ZIP(
    PRIVATE_KEY             INT,
    TITLE			VARCHAR(50)     NOT NULL,
    ZIP_NOTES			TEXT,
    DATE_ADDED            DATE
);

CREATE TABLE DOCUMENT_FILE(
    PRIVATE_KEY            INT,
    TITLE			VARCHAR(50)     NOT NULL,
    FILE_NOTES			TEXT,
    DATE_ADDED           DATE
);

CREATE TABLE DOCUMENT_FOLDER(
    PRIVATE_KEY          INT,
    TITLE		VARCHAR(50)         NOT NULL,
    FOLDER_NOTES		TEXT,
    DATE_ADDED         DATE
);
